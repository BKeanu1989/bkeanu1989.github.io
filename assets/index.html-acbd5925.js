import{_ as c,M as o,p as r,q as u,R as n,N as s,V as e,t as a,a1 as l}from"./framework-52ca566e.js";const d={},h=n("h1",{id:"what-s-new",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#what-s-new","aria-hidden":"true"},"#"),a(" What's new")],-1),k={class:"table-of-contents"},m=n("h2",{id:"developer-experience-for-vue-3-with-typescript",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#developer-experience-for-vue-3-with-typescript","aria-hidden":"true"},"#"),a(" Developer experience for Vue 3 with Typescript")],-1),v=l(`<h2 id="rust-is-being-destroyed-from-the-inside" tabindex="-1"><a class="header-anchor" href="#rust-is-being-destroyed-from-the-inside" aria-hidden="true">#</a> Rust is being destroyed from the inside</h2><p>I&#39;ve noticed multiple kinda halfbad things lately about rust. starting with their logo / mascot / crab. https://www.youtube.com/watch?v=QEnuzwCWpgQ</p><h2 id="array-methods" tabindex="-1"><a class="header-anchor" href="#array-methods" aria-hidden="true">#</a> Array methods</h2><pre><code>- Array.prototype.at
- Array.prototype.with
</code></pre><h2 id="cloning-objects" tabindex="-1"><a class="header-anchor" href="#cloning-objects" aria-hidden="true">#</a> Cloning Objects</h2><p>instead of</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> whatever <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>we can do this now</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> mushrooms1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">amanita</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;muscaria&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;virosa&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> mushrooms2 <span class="token operator">=</span> <span class="token function">structuredClone</span><span class="token punctuation">(</span>mushrooms1<span class="token punctuation">)</span><span class="token punctuation">;</span>

mushrooms2<span class="token punctuation">.</span>amanita<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;pantherina&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mushrooms1<span class="token punctuation">.</span>amanita<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mushrooms2<span class="token punctuation">.</span>amanita<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;muscaria&quot;, &quot;virosa&quot;, &quot;pantherina&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mushrooms1<span class="token punctuation">.</span>amanita<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;muscaria&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="web-worker-execution-in-main-thread" tabindex="-1"><a class="header-anchor" href="#web-worker-execution-in-main-thread" aria-hidden="true">#</a> Web Worker execution in main thread</h2><p>meaning we can write code in the main thread but it will execute in a separate web worker</p>`,11),b={href:"https://www.builder.io/blog/worker-multi-thread-JSX",target:"_blank",rel:"noopener noreferrer"};function f(w,_){const t=o("router-link"),i=o("RouterLink"),p=o("ExternalLinkIcon");return r(),u("div",null,[h,n("nav",k,[n("ul",null,[n("li",null,[s(t,{to:"#developer-experience-for-vue-3-with-typescript"},{default:e(()=>[a("Developer experience for Vue 3 with Typescript")]),_:1})]),n("li",null,[s(t,{to:"#rust-is-being-destroyed-from-the-inside"},{default:e(()=>[a("Rust is being destroyed from the inside")]),_:1})]),n("li",null,[s(t,{to:"#array-methods"},{default:e(()=>[a("Array methods")]),_:1})]),n("li",null,[s(t,{to:"#cloning-objects"},{default:e(()=>[a("Cloning Objects")]),_:1})]),n("li",null,[s(t,{to:"#web-worker-execution-in-main-thread"},{default:e(()=>[a("Web Worker execution in main thread")]),_:1})])])]),m,n("p",null,[a("https://blog.vuejs.org/posts/vue-3-3 or short summary: "),s(i,{to:"/whats-new/vue3-typescript.html"},{default:e(()=>[a("Vue 3 Typescript update")]),_:1})]),v,n("p",null,[n("a",b,[a("Web Worker in Main Thread"),s(p)])])])}const y=c(d,[["render",f],["__file","index.html.vue"]]);export{y as default};
