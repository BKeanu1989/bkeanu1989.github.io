import{_ as s,p as a,q as n,a1 as e}from"./framework-52ca566e.js";const t={},o=e(`<h1 id="custom-api" tabindex="-1"><a class="header-anchor" href="#custom-api" aria-hidden="true">#</a> Custom Api</h1><h2 id="sources" tabindex="-1"><a class="header-anchor" href="#sources" aria-hidden="true">#</a> Sources:</h2><p>https://developer.wordpress.org/rest-api/extending-the-rest-api/adding-custom-endpoints/</p><p>https://developer.wordpress.org/rest-api/extending-the-rest-api/routes-and-endpoints/</p><p>https://developer.wordpress.org/rest-api/extending-the-rest-api/controller-classes/</p><h3 id="auth" tabindex="-1"><a class="header-anchor" href="#auth" aria-hidden="true">#</a> Auth:</h3><p>https://developer.wordpress.org/rest-api/using-the-rest-api/authentication/</p><p>application passwords - rest api https://make.wordpress.org/core/2020/11/05/application-passwords-integration-guide/</p><p>https://developer.wordpress.org/rest-api/using-the-rest-api/discovery/</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>Feature Availability
By <span class="token keyword">default</span><span class="token punctuation">,</span> Application Passwords is available to all users on sites served over <span class="token constant">SSL</span><span class="token operator">/</span><span class="token constant">HTTPS</span><span class="token operator">.</span> This can be customized using the wp_is_application_passwords_available <span class="token keyword">and</span> wp_is_application_passwords_available_for_user filters<span class="token operator">.</span>

<span class="token keyword">For</span> example<span class="token punctuation">,</span> to completely disable Application Passwords add the following code snippet to your site<span class="token operator">.</span>

<span class="token function">add_filter</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;wp_is_application_passwords_available&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;__return_false&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
Without <span class="token constant">SSL</span><span class="token punctuation">,</span> it is possible <span class="token keyword">for</span> the Application Password to be seen by an attacker on your network <span class="token keyword">or</span> the network between your site <span class="token keyword">and</span> the authorized application<span class="token operator">.</span> <span class="token keyword">If</span> you are ok with this risk<span class="token punctuation">,</span> you can force availability with the following code snippet<span class="token operator">.</span>

<span class="token function">add_filter</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;wp_is_application_passwords_available&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;__return_true&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>listing all routes If you don’t use pretty permalinks, use “?rest_route=” instead of “wp-json”. Either way, what you’re seeing here is an example of a route and an endpoint. “/wp-json/” and “/?rest_route=/” are routes. They allow you to access the WordPress REST API through the GET HTTP method. The WordPress REST API displayed to you, or the data if you will, is an endpoint served to us via a JSON response.</p><p>?rest_route= didn&#39;t work for me</p><p>so I changed it to prettylink</p><p>rest client instead of postman</p><p>current_user_can</p><p>vite</p><h1 id="important" tabindex="-1"><a class="header-anchor" href="#important" aria-hidden="true">#</a> important</h1><p>use btob function for encoding coding string</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> base64EncodedAuthString <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Basic </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">btoa</span><span class="token punctuation">(</span><span class="token constant">USERNAME</span> <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> <span class="token constant">PASSWORD</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,19),p=[o];function i(r,c){return a(),n("div",null,p)}const d=s(t,[["render",i],["__file","custom-api.html.vue"]]);export{d as default};
