import{_ as s,p as n,q as a,a1 as t}from"./framework-52ca566e.js";const e={},p=t(`<p>source: https://javascript.tutorialink.com/typescript-type-string-is-not-assignable-to-type/</p><p>Typescript Type ‘string’ is not assignable to type</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> type Fruit <span class="token operator">=</span> <span class="token string">&quot;Orange&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;Apple&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;Banana&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">myString</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">&quot;Banana&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> <span class="token literal-property property">myFruit</span><span class="token operator">:</span> Fruit <span class="token operator">=</span> myString <span class="token keyword">as</span> Fruit<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tsconfig.json</p><pre><code>// &quot;typeRoots&quot;: [],                                  /* Specify multiple folders that act like \`./node_modules/@types\`. */
// &quot;types&quot;: [],  
</code></pre><hr><p>in declaration file some-example.d.ts</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
declare global <span class="token punctuation">{</span>
    <span class="token keyword">interface</span> <span class="token class-name">Window</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">clientConfig</span><span class="token operator">:</span> any
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>Type &#39;{ class: string; }&#39; is not assignable to type &#39;DetailedHTMLProps&lt;HTMLAttributes&lt;HTMLSpanElement&gt;, HTMLSpanElement&gt;&#39;.
  Property &#39;class&#39; does not exist on type &#39;DetailedHTMLProps&lt;HTMLAttributes&lt;HTMLSpanElement&gt;, HTMLSpanElement&gt;&#39;. Did you mean &#39;className&#39;?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>for rxjs source: https://stackoverflow.com/questions/54475893/typescript-type-x-is-missing-the-following-properties-from-type-y-length-pop</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>
<span class="token keyword">public</span> <span class="token function">getProducts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Observable<span class="token operator">&lt;</span>Product<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span>Product<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">api/products/v1/</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>index.d.ts package.json -&gt; typings</p><h2 id="in-js-files" tabindex="-1"><a class="header-anchor" href="#in-js-files" aria-hidden="true">#</a> in js files</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@typedef</span> <span class="token class-name"><span class="token punctuation">{</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;../types/holdersArea&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>LiveTokensData <span class="token punctuation">}</span></span>
 * <span class="token keyword">@typedef</span> <span class="token class-name"><span class="token punctuation">{</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;../types/holdersArea&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>HoldersArea <span class="token punctuation">}</span></span>
 * <span class="token keyword">@typedef</span> <span class="token class-name"><span class="token punctuation">{</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;../types/holdersArea&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ShowBackStory <span class="token punctuation">}</span></span>
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),o=[p];function i(c,l){return n(),a("div",null,o)}const u=s(e,[["render",i],["__file","typescript.html.vue"]]);export{u as default};
