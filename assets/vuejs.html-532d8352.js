import{_ as r,M as n,p as s,q as i,R as e,t as a,N as o,a1 as d}from"./framework-52ca566e.js";const u={},l=e("h1",{id:"vuejs",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vuejs","aria-hidden":"true"},"#"),a(" VueJs")],-1),c=e("h2",{id:"vue-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vue-2","aria-hidden":"true"},"#"),a(" Vue 2")],-1),h={href:"https://vuejs.org/",target:"_blank",rel:"noopener noreferrer"},p=d(`<h2 id="vue-3" tabindex="-1"><a class="header-anchor" href="#vue-3" aria-hidden="true">#</a> Vue 3</h2><p>Das Update auf Vue 3 kam mit viel Widerspruch, da befürchtet worden ist, dass die &quot;Einfachheit&quot; von Vue 2 abhanden kommt. Die Syntax sollte sich stark ändern. Ein regelrechter Hass prasselte auf das Projekt ein. Die bisherigen Syntax (Option API) wurde aber nicht ersetzt sondern es wurde einfach nur mit der Composition API erweitert.</p><p>Ich bin ein großer Fan von der neuen Composition API.</p><p>Ich muss sagen, dass Vue2 die beste Dokumentation bis dato hatte. Mit der Composition API ist diese zwar immer noch großartig, aber man muss sich ein wenig zurechtfinden. Der VueJs &quot;Gründer&quot; Evan You hat aber eine neue Dokumentation angekündigt - erreichbar unter - und wird bald die alte Dokumention ersetzen.</p><h3 id="tools" tabindex="-1"><a class="header-anchor" href="#tools" aria-hidden="true">#</a> Tools</h3><p>One of the biggest disadvantages for using Vue3 is that some frameworks are still not ready Vue2.</p><h4 id="vue-use-core" tabindex="-1"><a class="header-anchor" href="#vue-use-core" aria-hidden="true">#</a> Vue use (core)</h4><h4 id="nuxt" tabindex="-1"><a class="header-anchor" href="#nuxt" aria-hidden="true">#</a> Nuxt</h4><h3 id="blog" tabindex="-1"><a class="header-anchor" href="#blog" aria-hidden="true">#</a> Blog</h3><p>vmodel props input vue 3 in components</p><h2 id="passing-events-from-parent-to-children" tabindex="-1"><a class="header-anchor" href="#passing-events-from-parent-to-children" aria-hidden="true">#</a> passing events from parent to children</h2><p>(via ref?) https://stackoverflow.com/questions/67371579/vue-3-emit-event-from-parent-to-child-component</p><p>https://vueshowcase.com/question/how-to-get-and-observe-ref-to-element-from-a-v-for</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Unlike SFCs with a regular &lt;script&gt; block, &lt;script setup&gt; components are closed by default -- i.e. variables inside the &lt;script setup&gt; scope are not exposed to the parent unless explicitly exposed via defineExpose(). An empty object in the logged template ref implies you haven&#39;t exposed any properties.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>--&gt; upgrade vue</p><p>error:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>runtime-core.esm-bundler.js?5c40:38 [Vue warn]: Invalid vnode type when creating vnode: undefined. 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>https://stackoverflow.com/questions/68293064/vue-3-invalid-vnode-type</p><p>probable solution in vue.config.js uunder configureWebpack -&gt; resolve alias: { vue: path.resolve(<code>./node_modules/vue</code>) }</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>runtime-core.esm-bundler.js?5c40:38 [Vue warn]: Plugin has already been applied to target app.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>[ ] https://github.com/vuejs/vue-cli/issues/2754</li></ul><p>use services more for:</p><ul><li>[ ] data sources <ul><li>[ ] api</li><li>[ ] database</li></ul></li></ul><p>use car service .get</p><hr><p>shallowRef for performance of large datasets. only &quot;root&quot; is reactive</p><h2 id="component-library" tabindex="-1"><a class="header-anchor" href="#component-library" aria-hidden="true">#</a> Component Library</h2><p>https://blog.logrocket.com/building-vue-3-component-library/</p>`,28);function v(m,g){const t=n("ExternalLinkIcon");return s(),i("div",null,[l,c,e("p",null,[e("a",h,[a("VueJs 2"),o(t)])]),p])}const f=r(u,[["render",v],["__file","vuejs.html.vue"]]);export{f as default};
