import{_ as e,M as o,p,q as c,R as s,t as n,N as l,a1 as a}from"./framework-52ca566e.js";const i={},u=a(`<h1 id="curl-problems" tabindex="-1"><a class="header-anchor" href="#curl-problems" aria-hidden="true">#</a> Curl Problems</h1><p>https://stackoverflow.com/questions/3757071/php-debugging-curl</p><p>For some unknown reason my curl call to &#39;http://localhost:3000&#39; didn&#39;t work as expected. After some trial and errors I noticed, that my API was still working, but my PHP application didn&#39;t hit my local server via curl.</p><p>So I needed to know how to debug this problem. Luckily curl has some inbuilt verbose functionality. So just with the highlighted lines we get more information about what is going wrong.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>    <span class="token variable">$fp</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;/errorlog.txt&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;w+&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$url</span><span class="token punctuation">}</span></span>/gateway&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_CUSTOMREQUEST</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POSTFIELDS</span><span class="token punctuation">,</span> <span class="token variable">$data_string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_TIMEOUT</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_STDERR</span><span class="token punctuation">,</span> <span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_VERBOSE</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HTTPHEADER</span><span class="token punctuation">,</span>
    <span class="token keyword">array</span><span class="token punctuation">(</span>
        <span class="token string single-quoted-string">&#39;Content-Type: application/json&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;Content-Length: &#39;</span> <span class="token operator">.</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$data_string</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="highlight-lines"><div class="highlight-line">Â </div><br><br><br><br><br><br><div class="highlight-line">Â </div><div class="highlight-line">Â </div><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the errorlog.txt I saw that the curl call is not going to &#39;http://localhost:3000&#39; but &#39;127.0.0.1:3000&#39; which is the address of my local machine. So I needed to do some more googling... And to be honest, I didn&#39;t want to hassle with that anymore, so I just used NodeJs. I had to use for something else anyway. So why not just use it for that as well? ðŸ˜ƒ</p><hr>`,7),r={href:"https://packagist.org/packages/guzzlehttp/guzzle",target:"_blank",rel:"noopener noreferrer"},d=a(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[21-Feb-2022 15:11:44 UTC] cURL error 7: Failed to connect to localhost port 8080: Connection refused (see https://curl.haxx.se/libcurl/c/libcurl-errors.html)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>My docker-compose file exposes port 8080. So that shouldn&#39;t be the problem. It&#39;s working with javascript fetch though, so it kinda lead me to headers. The browser automatically sets some headers. (which one?)</p><hr><p>use my local network address ipv4</p><p>192.168.178.54 or 172.18.0.1</p><p>as seen in docker verbose?</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose --verbose up
Â´Â´Â´</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7);function k(h,v){const t=o("ExternalLinkIcon");return p(),c("div",null,[u,s("p",null,[n("And after just a few days I needed it to work in another wordpress project. I used "),s("a",r,[n("guzzlehttp/guzzle"),l(t)]),n(" for that. And I got the following")]),d])}const g=e(i,[["render",k],["__file","curl-debug.html.vue"]]);export{g as default};
